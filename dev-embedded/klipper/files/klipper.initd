#!/sbin/openrc-run

extra_args=$(if [ -z "$printer_api_socket" ]; then echo ""; else echo "-a $printer_api_socket"; fi)

description="Klipper service controlling connected 3D Printer"
command="/usr/libexec/klipper/klippy/klippy.py"
command_background=true
command_args="${printer_config} -l ${printer_logfile} $extra_args"
command_user="klipper:klipper"
pidfile="/run/klipper.pid"
extra_commands="checkconfig"
description_checkconfig="Validates service configuration file."

checkconfig() {
    if [ -z "$printer_config" ]; then
        eerror "You must to setup 'printer_config' in /etc/conf.d/klipper first!"
        exit 1
    fi;

    if [ -z "$printer_logfile" ]; then
        eerror "You must setup 'printer_logfile' in /etc/conf.d/klipper first!"
        exit 1
    fi;

    checkpath -f "$PRINTER_CONFIG"
}

start_pre() {
  # If this isn't a restart, make sure that the user's config isn't
  # busted before we try to start the daemon (this will produce
  # better error messages than if we just try to start it blindly).
  #
  # If, on the other hand, this *is* a restart, then the stop_pre
  # action will have ensured that the config is usable and we don't
  # need to do that again.
  if [ "${RC_CMD}" != "restart" ] ; then
    checkconfig || return $?

    logdir="$(dirname "$printer_logfile")"
    if [ ! -d "$logdir" ]; then
        mkdir "${logdir}" || eerror "Could not create logs directory ${logdir}"
        chown klipper:klipper "$logdir"
    fi
  fi
}

stop_pre() {
  # If this is a restart, check to make sure the user's config
  # isn't busted before we stop the running daemon.
  if [ "${RC_CMD}" = "restart" ] ; then
      checkconfig || return $?
  fi
}

depend() {
    need localmount
    after udev
    use logger
}
